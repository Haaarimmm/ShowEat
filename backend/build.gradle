// QueryDSL
buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.2' // Spring REST Docs
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // QueryDSL
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

// Spring REST Docs
ext {
    snippetsDir = file('build/generated-snippets')
}

// Spring REST Docs
bootJar {
    dependsOn asciidoctor
    copy {
        from "${asciidoctor.outputDir}"
        into 'BOOT-INF/classes/static/docs'
    }
}

repositories {
    mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'

	//S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	//Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	testImplementation 'org.springframework.security:spring-security-test'

	//Jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

    // Redisson
    implementation 'org.redisson:redisson-spring-boot-starter:3.17.4'

    // Elastic Search
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'org.elasticsearch:elasticsearch:7.17.13'
    implementation 'com.github.adedayo.intellij.sdk:gradle-tooling-extension-impl:142.1'
//    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'

    implementation 'jakarta.json:jakarta.json-api:2.0.1'
//    compile 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
//    compile 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.17.6'
//    compile 'org.elasticsearch.client:elasticsearch-rest-client:8.4.1'
//    compile 'org.elasticsearch:elasticsearch:8.4.1'

}

// QueryDSL 빌드 옵션
def querydslDir = "$projectDir/build/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

// Spring REST Docs
test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}
